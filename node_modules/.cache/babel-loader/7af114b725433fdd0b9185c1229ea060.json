{"ast":null,"code":"import './environment/react-native-logs.fx';\nimport { Platform } from 'expo-modules-core';\nimport * as React from 'react';\nimport { AppRegistry } from 'react-native';\nimport DevAppContainer from './environment/DevAppContainer';\n// When users dangerously import a file inside of react-native, it breaks the web alias.\n// This is one of the most common, and cryptic web errors that users encounter.\n// This conditional side-effect provides a more helpful error message for debugging.\nif (__DEV__) {\n  // Use a wrapper `__DEV__` to remove this entire block in production.\n  if (\n  // Only on web platforms.\n  Platform.OS === 'web' &&\n  // Skip mocking if someone is shimming this value out.\n  !('__fbBatchedBridgeConfig' in global)) {\n    Object.defineProperty(global, '__fbBatchedBridgeConfig', {\n      get() {\n        throw new Error(\"Your web project is importing a module from 'react-native' instead of 'react-native-web'. Learn more: https://expo.fyi/fb-batched-bridge-config-web\");\n      }\n    });\n  }\n  // add the dev app container wrapper component to web\n  // @ts-ignore\n  AppRegistry.setWrapperComponentProvider(() => DevAppContainer);\n  // @ts-ignore\n  const originalSetWrapperComponentProvider = AppRegistry.setWrapperComponentProvider;\n  // @ts-ignore\n  AppRegistry.setWrapperComponentProvider = provider => {\n    function PatchedProviderComponent(props) {\n      const ProviderComponent = provider();\n      return React.createElement(DevAppContainer, null, React.createElement(ProviderComponent, {\n        ...props\n      }));\n    }\n    originalSetWrapperComponentProvider(() => PatchedProviderComponent);\n  };\n}","map":{"version":3,"mappings":"AAAA,OAAO,oCAAoC;AAE3C,SAASA,QAAQ,QAAQ,mBAAmB;AAC5C,OAAO,KAAKC,KAAK,MAAM,OAAO;AAC9B,SAASC,WAAW,QAAQ,cAAc;AAE1C,OAAOC,eAAe,MAAM,+BAA+B;AAE3D;AACA;AACA;AACA,IAAIC,OAAO,EAAE;EACX;EACA;EACE;EACAJ,QAAQ,CAACK,EAAE,KAAK,KAAK;EACrB;EACA,EAAE,yBAAyB,IAAIC,MAAM,CAAC,EACtC;IACAC,MAAM,CAACC,cAAc,CAACF,MAAM,EAAE,yBAAyB,EAAE;MACvDG,GAAG;QACD,MAAM,IAAIC,KAAK,CACb,qJAAqJ,CACtJ;MACH;KACD,CAAC;;EAGJ;EACA;EACAR,WAAW,CAACS,2BAA2B,CAAC,MAAMR,eAAe,CAAC;EAE9D;EACA,MAAMS,mCAAmC,GAAGV,WAAW,CAACS,2BAA2B;EAEnF;EACAT,WAAW,CAACS,2BAA2B,GAAIE,QAAQ,IAAI;IACrD,SAASC,wBAAwB,CAACC,KAAU;MAC1C,MAAMC,iBAAiB,GAAGH,QAAQ,EAAE;MAEpC,OACEZ,oBAACE,eAAe,QACdF,oBAACe,iBAAiB;QAAA,GAAKD;MAAK,EAAI,CAChB;IAEtB;IAEAH,mCAAmC,CAAC,MAAME,wBAAwB,CAAC;EACrE,CAAC","names":["Platform","React","AppRegistry","DevAppContainer","__DEV__","OS","global","Object","defineProperty","get","Error","setWrapperComponentProvider","originalSetWrapperComponentProvider","provider","PatchedProviderComponent","props","ProviderComponent"],"sources":["/Users/noname/WebstormProjects/webapplastdesire/node_modules/expo/src/Expo.fx.web.tsx"],"sourcesContent":["import './environment/react-native-logs.fx';\n\nimport { Platform } from 'expo-modules-core';\nimport * as React from 'react';\nimport { AppRegistry } from 'react-native';\n\nimport DevAppContainer from './environment/DevAppContainer';\n\n// When users dangerously import a file inside of react-native, it breaks the web alias.\n// This is one of the most common, and cryptic web errors that users encounter.\n// This conditional side-effect provides a more helpful error message for debugging.\nif (__DEV__) {\n  // Use a wrapper `__DEV__` to remove this entire block in production.\n  if (\n    // Only on web platforms.\n    Platform.OS === 'web' &&\n    // Skip mocking if someone is shimming this value out.\n    !('__fbBatchedBridgeConfig' in global)\n  ) {\n    Object.defineProperty(global, '__fbBatchedBridgeConfig', {\n      get() {\n        throw new Error(\n          \"Your web project is importing a module from 'react-native' instead of 'react-native-web'. Learn more: https://expo.fyi/fb-batched-bridge-config-web\"\n        );\n      },\n    });\n  }\n\n  // add the dev app container wrapper component to web\n  // @ts-ignore\n  AppRegistry.setWrapperComponentProvider(() => DevAppContainer);\n\n  // @ts-ignore\n  const originalSetWrapperComponentProvider = AppRegistry.setWrapperComponentProvider;\n\n  // @ts-ignore\n  AppRegistry.setWrapperComponentProvider = (provider) => {\n    function PatchedProviderComponent(props: any) {\n      const ProviderComponent = provider();\n\n      return (\n        <DevAppContainer>\n          <ProviderComponent {...props} />\n        </DevAppContainer>\n      );\n    }\n\n    originalSetWrapperComponentProvider(() => PatchedProviderComponent);\n  };\n}\n"]},"metadata":{},"sourceType":"module"}